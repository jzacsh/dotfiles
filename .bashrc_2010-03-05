# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[[ -z "$PS1" ]] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

###################################################################

###############################
## JON'S STUFF:
###############################

export PATH=$PATH:$HOME/bin/
set -o vi
export MANPATH=$MANPATH:~/public/man

PS1='$(pwd | tail -c -23):$(uname -n)$ '
#	if (( $($PWD | wc -c) -gt 23 )); then
#		PS1='...$(pwd | tail -c -20):\H $ '
#	else
#		PS1='$(pwd | tail -c -23):\H $ '
#	fi

# redefine xterm (seems to cause problem w/dwm)
# alias xterm='xterm -maximize -background black -foreground green'

###############################
alias l='ls -laFH'
alias ca='clear; ls -laFH' 
alias cl='clear; ls -lFH'
alias edu='clear; cd ~/Dropbox/Public/edu; ls -laFH'
alias cdcpp='clear; cd ~/Dropbox/Public/edu/comp233; ls -laFH'
alias now='cal -3'
alias dreby='cd ~/bus/dreby; clear; ls -laFH'
alias sfy='cd ~/Dropbox/poop-box_sf/; clear; ls -laFH'
alias server='cd ~/Dropbox/nix/http/; clear; ls -laFH'
alias jzubox='ssh zacsh.homeip.net -p2189 -i ~/.ssh/id_rsa.pub'
alias bcc='ssh jzacsh1@sodapop.brookdalecc.edu'
alias html2pdf='wkhtmltopdf'
###############################

echo "aliases:	l ca cl edu cdcpp now dreby how jzubox sfy html2pdf"	# hard-coded listings sucks; please fix

echo #spacer

#`who` else loged in:
if [[ $(who | grep -v jzacsh) ]]; then
	echo "Currently on `uname -snr`, other than you:"
	who -H | grep -v jzacsh
	echo #spacer
fi

#smarter less	(only works with screen's terminal?)
(( $(screen -ls | grep -i attached | wc -l) == 1 )) && alias less='less -F'

#dropbox starter:
[[ $(dropbox status) == "Dropbox isn't running!" ]] && $(dropbox start; echo)

#open screen:
if [[ $(screen -ls | grep -i 'no socket') ]]; then
	screen -c ~/.screenrc.busy -S login_screen
elif [[ $(screen -ls | grep login_screen | grep -i 'detached') ]]; then
	screen -r login_screen
elif [[ $(screen -ls | grep login_screen | grep -i 'attached') ]]; then
	echo "ACTIVE SCREEN ALREADY ATTACHED:"
	#alias screenls='screen -ls | grep login_screen | grep -i "attached"'
	screen -ls | grep login_screen | grep -i "attached" | sed s/^\t//
fi

echo #spacer

#	#multidrive check:
#	alias percent='df -ah  | grep multidrive | cut --delim=% -f 1  | tail -c 5'
#	# df -ah  | grep multidrive | cut --delim=% -f 1  | tail -c 5
#	echo $percent
#	$percent | grep -v ' '
